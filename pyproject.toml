[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gmail2bear"
version = "0.1.0"
description = "A tool to automatically convert Gmail emails to Bear notes"
readme = "README.md"
authors = [
    {name = "Chad Walters", email = "chad.walters@gmail.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: MacOS :: MacOS X",
    "Topic :: Communications :: Email",
    "Topic :: Utilities",
]
requires-python = ">=3.8"
dependencies = [
    "google-api-python-client>=2.0.0",
    "google-auth-oauthlib>=0.4.0",
    "google-auth-httplib2>=0.1.0",
    "cryptography>=36.0.0",
    "pync>=2.0.3",
    "html2text>=2020.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=4.0.0",
    "mypy>=0.9.0",
    "ruff>=0.2.0",
    "pre-commit>=3.5.0",
]
phase2 = [
]

[project.scripts]
gmail2bear = "gmail2bear.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["gmail2bear"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "C4", # flake8-comprehensions
    "B",  # flake8-bugbear
    "N",  # pep8-naming
    "D",  # pydocstyle
    "UP", # pyupgrade
    "S",  # flake8-bandit (security)
    "A",  # flake8-builtins
]
ignore = [
    "D203",  # one-blank-line-before-class
    "D212",  # multi-line-summary-first-line
    "S301",  # pickle-use (we need pickle for token storage)
    "S105",  # hardcoded-password-string (false positives in tests)
    "S106",  # hardcoded-password-func-arg (false positives in tests)
    "S603",  # subprocess-without-shell-equals-true (needed for Bear integration)
    "S607",  # start-process-with-partial-path (needed for Bear integration)
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "D", "N"]  # Allow assert in tests, ignore docstrings and naming in tests
